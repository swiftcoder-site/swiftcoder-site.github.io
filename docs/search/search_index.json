{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":true,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home page If you want to report errors you found on this website or want to discuss the content, create a ticket or a pull request at Github","title":"Home"},{"location":"#home-page","text":"If you want to report errors you found on this website or want to discuss the content, create a ticket or a pull request at Github","title":"Home page"},{"location":"design-patterns/creational-patterns/prototype/","text":"","title":"Prototype"},{"location":"design-patterns/creational-patterns/singleton/","text":"Singleton Singleton is a design pattern that gives a way to get the global access to an instance of a class and make sure there is only one instace of it. Steps to achieve this behaviour: Make constructor private Create static varible Let's look at the example: class ApiClient { static let shared = ApiClient () private init () { } } Now, we can access the instance of ApiClient by ApiClient.shared . Here is version with lazy initialisation. class ApiClient { // NOTE: Static veribles do not need lazy keywoard static var shared : ApiClient = { ApiClient () }() private init () { } }","title":"Singleton"},{"location":"design-patterns/creational-patterns/singleton/#singleton","text":"Singleton is a design pattern that gives a way to get the global access to an instance of a class and make sure there is only one instace of it. Steps to achieve this behaviour: Make constructor private Create static varible Let's look at the example: class ApiClient { static let shared = ApiClient () private init () { } } Now, we can access the instance of ApiClient by ApiClient.shared . Here is version with lazy initialisation. class ApiClient { // NOTE: Static veribles do not need lazy keywoard static var shared : ApiClient = { ApiClient () }() private init () { } }","title":"Singleton"},{"location":"sdk/copy-on-write/","text":"Copy-on-Write is a mechanizm that allocates memory for the copied object only wnen the copy has been modified https://betterprogramming.pub/understand-copy-on-write-in-swift-5-52a4716165a3 final class Ref < T > { var val : T init ( _ v : T ) { val = v } } struct Box < T > { var ref : Ref < T > init ( _ x : T ) { ref = Ref ( x ) } var value : T { get { return ref . val } set { if ( ! isKnownUniquelyReferenced (& ref )) { ref = Ref ( newValue ) return } ref . val = newValue } } }","title":"Copy-on-Write"},{"location":"sdk/threading/","text":"Kind of jobs might be perform in the separate threads Computation intensive jobs: When the thread uses entire processing capability of CPU. The reasonable maximum number of the threads is the number of CPU cores. By crating more threads we cause unnecessary switching of the context by the CPU, which takes some unit of time therefore it makes the calculation slower. I/O intensive jobs: In that case we can trigger more threads than we have CPU cores and there is a formula how we can calculate how many thread is an optimal Threads = Cores / (1- Blocking Factor ). Here the switch of CPU context itself does not impact much into performance, because the thread probably is waiting for a signal anyway. Mutex and the data consistency What makes threading difficult is the data consistency. Imagine the situation when there are two threads that have a pointer to the same array which suppose to contains unique items. Both threads can modify and read the array. Let's say both of the threads want to append the same item at exactly the same time to this array. What they do is to check if the item already exists in the array so they iterate through the array for checking the item if it is a duplicate and if not both of them will append it. The array will contains two the same items or even works the app will crash because the array might be mutated at the time the other threat iterate through it. The solution is to use mutex for blocking threads in order to avoid override the data. var mutex = pthread_mutex_t () pthread_mutex_init (& mutex , nil ) pthread_mutex_lock (& mutex ) // do atomic job pthread_mutex_unlock (& mutex ) pthread_mutex_destroy (& mutex ) Another mechanism for syncing thread is semaphore, but you need to be aware of potential deadlock. Below you can see one let semaphore = DispatchSemaphore ( value : 0 ) semaphore . wait () // DEADLOCK semaphore . signal () The current thread stops and wait for a signal that can not be send in this case, because we try to send it from the same thread which is stopped. Article abut mutexes NSObject The easiest way to start a new thread is to use a method that comes from base class NSObject performSelector ( inBackground : #selector ( job ), with : nil ) GCD (Grand Central Dispatch) The libdispatch is a part of core library which takes care about threading. In particular how to manage sync calls dispatch_once : Does not exists in SDK anymore [1] Here is an alternative private lazy var foo : Void = { // Do this once }() dispatch_sync : locks the current thread until the passed block is executed on the separated thread dispatch_async : starts executing the passed block on a separate thread, but the current one keeps running // without \"attributes\" we will get serial queue let queue = DispatchQueue ( label : \"important.job\" , qos : . default , attributes : . concurrent ) queue . async { // do stuff } DispatchQueue . main . async { < # code # > } DispatchQueue . global ( qos : . background ). async { < # code # > } Raywenderlich article serial vs concurrent queues This answer says that \" NSOperationQueue does use GCD on iOS 4.0 and later\" it says also quote: Prefer GCD where task is not much complex and optimum CPU performance is required. Prefer NSOperationQueue where task is complex and requires canceling or suspending a block and dependency management. Nice article that TODO: look at examples from the picture NSThread https://developer.apple.com/reference/foundation/thread This is the most let thread = Thread ( target : self , selector : #selector ( job ), object : nil ) // or let thread = Thread { < # code # > } // and then start the tread thread . start () NSOperationQueue [1] * How to cancel NSOperationQueue Blueprint of NSOperation class MyVeryExpensiveOperation : Operation { override func main () { if self . isCancelled { return } // Some chunk of time consuming task if self . isCancelled { return } // Some another chunk of time consuming task // and so on... } } Blueprint of NSOperationQueue let queue = OperationQueue () queue . name = \"Queue Name\" queue . maxConcurrentOperationCount = 1 let myOperation = MyVeryExpensiveOperation () queue . addOperation ( myOperation ) queue . addOperation { // some another job passed by block } pthread (advanced/JFYI) There is no good idea to handle threads from low level because it affect highly into development time of an application, whoever as all of us we are curious about everything, so I am going to show you how to do pthreading on iOS. Here is an example: var user_interactive_thread : pthread_t ? var user_interactive_qos_attr = pthread_attr_t () return_value = pthread_attr_init (& user_interactive_qos_attr ) return_value = pthread_attr_set_qos_class_np (& user_interactive_qos_attr , QOS_CLASS_USER_INTERACTIVE , 0 ) return_value = pthread_create (& user_interactive_thread , & user_interactive_qos_attr , { ( x : UnsafeMutableRawPointer ) in print ( \"New pthread job\" ) return nil }, nil )","title":"Threading"},{"location":"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads","text":"Computation intensive jobs: When the thread uses entire processing capability of CPU. The reasonable maximum number of the threads is the number of CPU cores. By crating more threads we cause unnecessary switching of the context by the CPU, which takes some unit of time therefore it makes the calculation slower. I/O intensive jobs: In that case we can trigger more threads than we have CPU cores and there is a formula how we can calculate how many thread is an optimal Threads = Cores / (1- Blocking Factor ). Here the switch of CPU context itself does not impact much into performance, because the thread probably is waiting for a signal anyway.","title":"Kind of jobs might be perform in the separate threads"},{"location":"sdk/threading/#mutex-and-the-data-consistency","text":"What makes threading difficult is the data consistency. Imagine the situation when there are two threads that have a pointer to the same array which suppose to contains unique items. Both threads can modify and read the array. Let's say both of the threads want to append the same item at exactly the same time to this array. What they do is to check if the item already exists in the array so they iterate through the array for checking the item if it is a duplicate and if not both of them will append it. The array will contains two the same items or even works the app will crash because the array might be mutated at the time the other threat iterate through it. The solution is to use mutex for blocking threads in order to avoid override the data. var mutex = pthread_mutex_t () pthread_mutex_init (& mutex , nil ) pthread_mutex_lock (& mutex ) // do atomic job pthread_mutex_unlock (& mutex ) pthread_mutex_destroy (& mutex ) Another mechanism for syncing thread is semaphore, but you need to be aware of potential deadlock. Below you can see one let semaphore = DispatchSemaphore ( value : 0 ) semaphore . wait () // DEADLOCK semaphore . signal () The current thread stops and wait for a signal that can not be send in this case, because we try to send it from the same thread which is stopped. Article abut mutexes","title":"Mutex and the data consistency"},{"location":"sdk/threading/#nsobject","text":"The easiest way to start a new thread is to use a method that comes from base class NSObject performSelector ( inBackground : #selector ( job ), with : nil )","title":"NSObject"},{"location":"sdk/threading/#gcd-grand-central-dispatch","text":"The libdispatch is a part of core library which takes care about threading. In particular how to manage sync calls dispatch_once : Does not exists in SDK anymore [1] Here is an alternative private lazy var foo : Void = { // Do this once }() dispatch_sync : locks the current thread until the passed block is executed on the separated thread dispatch_async : starts executing the passed block on a separate thread, but the current one keeps running // without \"attributes\" we will get serial queue let queue = DispatchQueue ( label : \"important.job\" , qos : . default , attributes : . concurrent ) queue . async { // do stuff } DispatchQueue . main . async { < # code # > } DispatchQueue . global ( qos : . background ). async { < # code # > } Raywenderlich article serial vs concurrent queues This answer says that \" NSOperationQueue does use GCD on iOS 4.0 and later\" it says also quote: Prefer GCD where task is not much complex and optimum CPU performance is required. Prefer NSOperationQueue where task is complex and requires canceling or suspending a block and dependency management. Nice article that TODO: look at examples from the picture","title":"GCD (Grand Central Dispatch)"},{"location":"sdk/threading/#nsthread","text":"https://developer.apple.com/reference/foundation/thread This is the most let thread = Thread ( target : self , selector : #selector ( job ), object : nil ) // or let thread = Thread { < # code # > } // and then start the tread thread . start ()","title":"NSThread"},{"location":"sdk/threading/#nsoperationqueue","text":"[1] * How to cancel NSOperationQueue","title":"NSOperationQueue"},{"location":"sdk/threading/#blueprint-of-nsoperation","text":"class MyVeryExpensiveOperation : Operation { override func main () { if self . isCancelled { return } // Some chunk of time consuming task if self . isCancelled { return } // Some another chunk of time consuming task // and so on... } }","title":"Blueprint of NSOperation"},{"location":"sdk/threading/#blueprint-of-nsoperationqueue","text":"let queue = OperationQueue () queue . name = \"Queue Name\" queue . maxConcurrentOperationCount = 1 let myOperation = MyVeryExpensiveOperation () queue . addOperation ( myOperation ) queue . addOperation { // some another job passed by block }","title":"Blueprint of NSOperationQueue"},{"location":"sdk/threading/#pthread-advancedjfyi","text":"There is no good idea to handle threads from low level because it affect highly into development time of an application, whoever as all of us we are curious about everything, so I am going to show you how to do pthreading on iOS. Here is an example: var user_interactive_thread : pthread_t ? var user_interactive_qos_attr = pthread_attr_t () return_value = pthread_attr_init (& user_interactive_qos_attr ) return_value = pthread_attr_set_qos_class_np (& user_interactive_qos_attr , QOS_CLASS_USER_INTERACTIVE , 0 ) return_value = pthread_create (& user_interactive_thread , & user_interactive_qos_attr , { ( x : UnsafeMutableRawPointer ) in print ( \"New pthread job\" ) return nil }, nil )","title":"pthread (advanced/JFYI)"},{"location":"sdk/view-modifiers/","text":"First step is to define how to get the theme and apply it. We use here dependency injection . struct LightBackgroundColorModifier : ViewModifier { @ Injected (. theme ) private var theme func body ( content : Content ) -> some View { content . background ( Color ( theme . lightColor )) } } And here we are adding extension to View to have convenience in invoking the view modifier. extension View { func lightBackground () -> some View { modifier ( LightBackgroundColorModifier ()) } } When you build views now you just simply use the lightBackground method. Text ( \"Tile\" ) . lightBackground ()","title":"Theming with View Modifiers"},{"location":"testing/dependency-injection/","text":"The app implementation First, we need to create the interface for our reposiotry that provides us the temperature for given location. In order to make the app more testable we will use the protocol defined below across the whole app instead of a class name that points to the final implementation. protocol TemperatureProviding { func temperature ( for location : CLLocation , result : ( Float64 ) -> Void ) } TemperatureProvider is the class that implements the real api calls and operates on real data, but the app will not use it directly in order to have possibility to mock the data repository. protocol TemperatureProvider : LoggerProviding { func temperature ( for location : CLLocation , result : ( Float64 ) -> Void ) // requesting the temperature from backend or whatever } } Every time when we want to use repository we need to inject it into the class using @Injected property wrapper. The point of it is that the TemperatureProvider user does not know the target implementation and not even care. struct TemperatureViewModel { @ Injected ( \\ . temperatureProvider ) var temperatureProvider : TemperatureProvider func loadData () { let location = CLLocation ( latitude : 49.9683988 , longitude : 20.7260966 ) temperatureProvider . temperature ( for : location , result : { temperature in print ( \"temperature is: \\( temperature ) \" ) } } } Define dependency 1st step: Depencency injector uses InjectionKey to register depencencies. It stores in the static property a currenct value for every key type (see next chapter to see implementation) Every class that is injected has to implement key and current value like this: private struct TemperatureProviderKey : InjectionKey { static var currentValue : TemperatureProviding = TemperatureProvider () } 2nd step: Extend InjectedValues and add propetry to it. It will link the exact InjectionKey implementation with the property. The property wrapper called like this @Injected(\\.temperatureProvider) will take the pey path, access InjectedValues and use keypath on it, and the getter of an injected propeperty will extract value from InjectionKey . extension InjectedValues { var temperatureProvider : TemperatureProviding { get { Self [ TemperatureProviderKey . self ] } set { Self [ TemperatureProviderKey . self ] = newValue } } } - InjectedValues[\\.temperatureProvider] = MockedTemperatureProvider() Implementation of dependency injector Let's define the protocol that defines the InjectionKey that holds current value public protocol InjectionKey { associatedtype Value static var currentValue : Self . Value { get set } } Here is how InjectedValues is defined. struct InjectedValues { private static var current = InjectedValues () private init () {} static subscript < K >( key : K . Type ) -> K . Value where K : InjectionKey { get { key . currentValue } set { key . currentValue = newValue } } static subscript < T >( _ keyPath : WritableKeyPath < InjectedValues , T >) -> T { get { current [ keyPath : keyPath ] } set { current [ keyPath : keyPath ] = newValue } } } and there is definition of the property wrapper @ propertyWrapper struct Injected < T > { private let keyPath : WritableKeyPath < InjectedValues , T > var wrappedValue : T { get { InjectedValues [ keyPath ] } set { InjectedValues [ keyPath ] = newValue } } init ( _ keyPath : WritableKeyPath < InjectedValues , T >) { self . keyPath = keyPath } }","title":"Dependency injection"},{"location":"testing/dependency-injection/#the-app-implementation","text":"First, we need to create the interface for our reposiotry that provides us the temperature for given location. In order to make the app more testable we will use the protocol defined below across the whole app instead of a class name that points to the final implementation. protocol TemperatureProviding { func temperature ( for location : CLLocation , result : ( Float64 ) -> Void ) } TemperatureProvider is the class that implements the real api calls and operates on real data, but the app will not use it directly in order to have possibility to mock the data repository. protocol TemperatureProvider : LoggerProviding { func temperature ( for location : CLLocation , result : ( Float64 ) -> Void ) // requesting the temperature from backend or whatever } } Every time when we want to use repository we need to inject it into the class using @Injected property wrapper. The point of it is that the TemperatureProvider user does not know the target implementation and not even care. struct TemperatureViewModel { @ Injected ( \\ . temperatureProvider ) var temperatureProvider : TemperatureProvider func loadData () { let location = CLLocation ( latitude : 49.9683988 , longitude : 20.7260966 ) temperatureProvider . temperature ( for : location , result : { temperature in print ( \"temperature is: \\( temperature ) \" ) } } }","title":"The app implementation"},{"location":"testing/dependency-injection/#define-dependency","text":"1st step: Depencency injector uses InjectionKey to register depencencies. It stores in the static property a currenct value for every key type (see next chapter to see implementation) Every class that is injected has to implement key and current value like this: private struct TemperatureProviderKey : InjectionKey { static var currentValue : TemperatureProviding = TemperatureProvider () } 2nd step: Extend InjectedValues and add propetry to it. It will link the exact InjectionKey implementation with the property. The property wrapper called like this @Injected(\\.temperatureProvider) will take the pey path, access InjectedValues and use keypath on it, and the getter of an injected propeperty will extract value from InjectionKey . extension InjectedValues { var temperatureProvider : TemperatureProviding { get { Self [ TemperatureProviderKey . self ] } set { Self [ TemperatureProviderKey . self ] = newValue } } } - InjectedValues[\\.temperatureProvider] = MockedTemperatureProvider()","title":"Define dependency"},{"location":"testing/dependency-injection/#implementation-of-dependency-injector","text":"Let's define the protocol that defines the InjectionKey that holds current value public protocol InjectionKey { associatedtype Value static var currentValue : Self . Value { get set } } Here is how InjectedValues is defined. struct InjectedValues { private static var current = InjectedValues () private init () {} static subscript < K >( key : K . Type ) -> K . Value where K : InjectionKey { get { key . currentValue } set { key . currentValue = newValue } } static subscript < T >( _ keyPath : WritableKeyPath < InjectedValues , T >) -> T { get { current [ keyPath : keyPath ] } set { current [ keyPath : keyPath ] = newValue } } } and there is definition of the property wrapper @ propertyWrapper struct Injected < T > { private let keyPath : WritableKeyPath < InjectedValues , T > var wrappedValue : T { get { InjectedValues [ keyPath ] } set { InjectedValues [ keyPath ] = newValue } } init ( _ keyPath : WritableKeyPath < InjectedValues , T >) { self . keyPath = keyPath } }","title":"Implementation of dependency injector"}],"index":{"fieldVectors":[["title/",[0,2.311]],["text/",[0,2.851,1,3.373,2,2.218,3,3.373,4,3.373,5,3.373,6,3.373,7,3.373,8,2.851,9,1.891,10,3.373,11,3.373,12,2.461,13,3.373]],["title/#home-page",[0,1.838,1,2.175]],["text/#home-page",[2,2.233,3,3.411,4,3.411,5,3.411,6,3.411,7,3.411,8,2.883,9,1.912,10,3.411,11,3.411,12,2.489,13,3.411]],["title/design-patterns/creational-patterns/prototype/",[14,3.376]],["text/design-patterns/creational-patterns/prototype/",[]],["title/design-patterns/creational-patterns/singleton/",[15,1.995]],["text/design-patterns/creational-patterns/singleton/",[9,1.411,15,2.407,16,2.517,17,2.517,18,2.517,19,1.837,20,1.837,21,2.407,22,3.299,23,1.421,24,1.632,25,2.517,26,1.605,27,2.517,28,1.605,29,2.517,30,2.517,31,2.517,32,1.609,33,2.489,34,2.517,35,1.411,36,1.837,37,1.605,38,4.16,39,0.364,40,3.299,41,2.103,42,2.128,43,2.517,44,0.972,45,2.517,46,2.407,47,2.517,48,2.517,49,2.517,50,1.411,51,2.517,52,0.654]],["title/design-patterns/creational-patterns/singleton/#singleton",[15,1.995]],["text/design-patterns/creational-patterns/singleton/#singleton",[9,1.417,15,1.844,16,2.528,17,2.528,18,2.528,19,1.844,20,1.844,21,2.414,22,3.308,23,1.424,24,1.637,25,2.528,26,1.611,27,2.528,28,1.611,29,2.528,30,2.528,31,2.528,32,1.612,33,2.493,34,2.528,35,1.417,36,1.844,37,1.611,38,4.165,39,0.364,40,3.308,41,2.109,42,2.137,43,2.528,44,0.976,45,2.528,46,2.414,47,2.528,48,2.528,49,2.528,50,1.417,51,2.528,52,0.657]],["title/sdk/copy-on-write/",[53,2.175,54,2.175]],["text/sdk/copy-on-write/",[23,0.871,39,0.372,41,1.954,52,0.905,53,3.736,54,3.065,55,2.784,56,2.784,57,2.784,58,1.906,59,2.784,60,1.437,61,2.784,62,2.784,63,2.784,64,2.784,65,1.906,66,5.312,67,3.485,68,4.614,69,2.591,70,3.785,71,1.264,72,2.784,73,2.591,74,1.264,75,2.237,76,1.645,77,2.784,78,2.237]],["title/sdk/threading/",[79,1.056]],["text/sdk/threading/",[2,0.453,19,0.589,20,0.589,23,0.534,24,0.684,26,0.881,32,0.353,35,0.453,36,0.589,37,0.881,39,0.369,44,0.699,46,0.589,50,0.453,52,0.557,58,0.683,60,0.515,73,0.683,74,0.453,75,1.322,79,1.562,80,0.808,81,1.295,82,1.322,83,1.531,84,0.808,85,1.382,86,0.828,87,0.808,88,0.808,89,0.808,90,2.221,91,0.808,92,0.808,93,1.382,94,1.813,95,0.808,96,1.008,97,0.808,98,0.808,99,1.382,100,1.382,101,0.881,102,0.808,103,1.3,104,0.808,105,1.382,106,0.808,107,0.808,108,1.168,109,0.808,110,0.808,111,0.808,112,0.808,113,1.367,114,1.675,115,0.808,116,0.808,117,0.808,118,1.168,119,0.808,120,1.531,121,1.531,122,0.808,123,2.503,124,1.155,125,1.168,126,0.808,127,0.808,128,0.808,129,1.382,130,0.808,131,2.41,132,2.809,133,0.808,134,1.382,135,0.808,136,2.41,137,1.811,138,0.808,139,1.382,140,0.808,141,1.382,142,0.808,143,1.168,144,1.382,145,1.382,146,0.808,147,0.589,148,0.808,149,0.515,150,0.808,151,0.808,152,0.808,153,0.808,154,0.589,155,0.808,156,1.168,157,0.808,158,0.808,159,1.537,160,0.808,161,0.808,162,0.808,163,0.808,164,1.322,165,0.808,166,1.168,167,2.144,168,0.808,169,0.808,170,1.382,171,0.589,172,0.589,173,0.808,174,1.168,175,1.015,176,1.382,177,1.382,178,0.808,179,1.531,180,0.808,181,1.168,182,0.808,183,1.565,184,1.168,185,0.683,186,0.808,187,0.808,188,0.808,189,0.808,190,1.531,191,1.531,192,0.808,193,0.808,194,0.808,195,0.808,196,0.808,197,0.808,198,0.589,199,0.808,200,1.382,201,0.515,202,0.808,203,0.808,204,0.808,205,0.808,206,0.808,207,0.589,208,0.808,209,0.808,210,0.808,211,0.808,212,1.531,213,1.382,214,0.808,215,0.808,216,0.808,217,0.808,218,1.382,219,1.382,220,2.71,221,1.811,222,0.808,223,0.808,224,1.382,225,0.808,226,1.382,227,1.811,228,0.808,229,1.168,230,1.531,231,0.683,232,0.808,233,0.808,234,0.808,235,1.537,236,1.168,237,0.808,238,0.808,239,0.808,240,1.382,241,1.813,242,1.382,243,0.808,244,1.382,245,1.168,246,0.808,247,0.4,248,0.808,249,0.808,250,0.808,251,0.808,252,0.808,253,0.589,254,1.015,255,0.808,256,1.168,257,0.808,258,1.168,259,0.589,260,0.515,261,1.382,262,1.382,263,1.382,264,0.808,265,1.008,266,0.808,267,1.382,268,1.382,269,1.531,270,0.808,271,0.808,272,0.808,273,0.808,274,0.808,275,0.808,276,0.808,277,0.808,278,0.808,279,0.808,280,0.808,281,0.808,282,0.808,283,0.808,284,0.808,285,1.382,286,0.808,287,2.144,288,0.808,289,1.811,290,0.808,291,0.808,292,0.808,293,0.808,294,0.808,295,0.589]],["title/sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads",[79,0.52,80,1.348,81,0.589,82,0.983,83,1.139]],["text/sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads",[24,1.3,39,0.299,44,1.014,79,1.653,81,1.483,82,1.917,84,2.626,85,3.391,86,1.014,87,2.626,88,2.626,89,2.626,90,3.473,91,2.626,92,2.626,93,3.391,94,3.175,95,2.626,96,2.475,97,2.626,98,2.626,99,3.391,100,3.391,101,1.674,102,2.626,103,1.3,104,2.626,105,3.391,106,2.626,107,2.626,108,2.22,109,2.626,110,2.626,111,2.626,112,2.626,113,1.674,114,1.674,115,2.626,116,2.626,117,2.626,118,2.22,119,2.626,120,2.22,121,2.22,122,2.626]],["title/sdk/threading/#mutex-and-the-data-consistency",[123,1.526,124,1.151,125,1.526]],["text/sdk/threading/#mutex-and-the-data-consistency",[2,1.115,24,0.984,26,1.267,35,1.115,39,0.357,50,1.115,52,0.517,60,1.267,74,1.115,79,1.571,81,0.869,86,0.768,103,1.39,108,1.68,114,1.267,120,2.374,121,2.374,123,3.368,124,1.791,125,1.68,126,1.988,127,1.988,128,1.988,129,2.809,130,1.988,131,3.734,132,3.984,133,1.988,134,2.809,135,1.988,136,3.734,137,3.257,138,1.988,139,2.809,140,1.988,141,2.809,142,1.988,143,1.68,144,2.809,145,2.809,146,1.988,147,1.451,148,1.988,149,1.267,150,1.988,151,1.988,152,1.988,153,1.988,154,1.451,155,1.988,156,1.68,157,1.988,158,1.988,159,1.267,160,1.988,161,1.988,162,1.988,163,1.988,164,1.451,165,1.988,166,1.68,167,3.54,168,1.988,169,1.988,170,2.809,171,1.451,172,1.451,173,1.988,174,1.68,175,1.115,176,2.809,177,2.809,178,1.988,179,1.68,180,1.988]],["title/sdk/threading/#nsobject",[181,2.311]],["text/sdk/threading/#nsobject",[19,2.369,23,1.253,39,0.353,79,1.253,81,1.419,86,1.253,159,2.069,181,2.744,182,3.246,183,2.369,184,2.744,185,2.744,186,3.246,187,3.246,188,3.246,189,3.246,190,2.744]],["title/sdk/threading/#gcd-grand-central-dispatch",[191,1.305,192,1.543,193,1.543,194,1.543]],["text/sdk/threading/#gcd-grand-central-dispatch",[20,1.396,26,1.219,32,0.836,36,1.396,37,1.219,39,0.368,44,0.739,46,1.396,52,0.497,79,1.343,82,1.396,83,2.31,86,0.739,90,1.617,94,1.617,101,1.219,113,1.219,114,2.033,118,1.617,143,1.617,166,1.617,175,1.532,179,2.31,183,1.396,191,2.31,195,1.913,196,1.913,197,1.913,198,1.396,199,1.913,200,2.733,201,1.219,202,1.913,203,1.913,204,1.913,205,1.913,206,1.913,207,1.396,208,1.913,209,1.913,210,1.913,211,1.913,212,2.31,213,2.733,214,1.913,215,1.913,216,1.913,217,1.913,218,2.733,219,2.733,220,2.94,221,3.189,222,1.913,223,1.913,224,2.733,225,1.913,226,2.733,227,3.189,228,1.913,229,1.617,230,2.31,231,1.617,232,1.913,233,1.913,234,1.913,235,1.742,236,1.617,237,1.913,238,1.913,239,1.913,240,2.733,241,2.31,242,2.733,243,1.913,244,2.733,245,1.617,246,1.913,247,0.946,248,1.913,249,1.913,250,1.913]],["title/sdk/threading/#nsthread",[251,2.734]],["text/sdk/threading/#nsthread",[39,0.37,58,2.54,79,1.652,81,1.314,159,1.915,183,2.693,190,3.12,230,2.54,252,3.004,253,2.192,254,1.684,255,3.004]],["title/sdk/threading/#nsoperationqueue",[235,1.743]],["text/sdk/threading/#nsoperationqueue",[39,0.286,113,2.29,235,2.29,245,3.037]],["title/sdk/threading/#blueprint-of-nsoperation",[256,1.838,257,2.175]],["text/sdk/threading/#blueprint-of-nsoperation",[23,1.166,39,0.367,75,2.702,103,1.832,156,2.552,164,2.203,229,2.552,241,3.13,254,2.076,258,2.552,259,2.203,260,1.925,261,3.702,262,3.702,263,3.702]],["title/sdk/threading/#blueprint-of-nsoperationqueue",[235,1.386,256,1.838]],["text/sdk/threading/#blueprint-of-nsoperationqueue",[39,0.367,81,1.327,113,1.934,114,1.934,164,2.214,212,2.565,220,3.69,258,2.565,264,3.035,265,2.71,266,3.035,267,3.714,268,3.714]],["title/sdk/threading/#pthread-advancedjfyi",[269,1.838,270,2.175]],["text/sdk/threading/#pthread-advancedjfyi",[37,1.632,39,0.368,44,0.988,52,0.867,73,2.164,75,1.868,79,0.988,81,1.119,103,1.267,159,2.126,174,2.164,184,2.164,236,2.164,269,2.819,271,2.56,272,2.56,273,2.56,274,2.56,275,2.56,276,2.56,277,2.56,278,2.56,279,2.56,280,2.56,281,2.56,282,2.56,283,2.56,284,2.56,285,3.335,286,2.56,287,3.93,288,2.56,289,3.71,290,2.56,291,2.56,292,2.56,293,2.56,294,2.56,295,1.868]],["title/sdk/view-modifiers/",[60,1.151,296,1.805,297,1.805]],["text/sdk/view-modifiers/",[8,3.073,28,1.565,32,1.074,39,0.37,42,2.076,44,1.253,52,0.638,60,2.069,71,1.377,86,1.253,185,2.076,231,2.076,247,1.215,260,2.069,296,3.868,297,4.132,298,2.076,299,1.565,300,3.033,301,1.82,302,4.008,303,3.033,304,3.033,305,3.033,306,3.033,307,3.033,308,2.744,309,3.033,310,3.033,311,4.489,312,3.033,313,3.033,314,3.033,315,3.033]],["title/testing/dependency-injection/",[247,1.076,301,1.219]],["text/testing/dependency-injection/",[2,0.56,9,0.56,12,0.728,21,0.728,23,0.948,24,0.494,28,1.053,32,1.074,33,1.868,35,0.56,39,0.372,41,1.053,44,0.385,50,0.926,52,0.762,65,0.844,67,2.623,69,1.396,71,1.377,74,1.74,76,1.985,78,1.792,86,1.132,96,0.728,101,0.636,103,0.494,124,1.053,147,0.728,149,1.565,154,1.205,171,0.728,172,1.205,175,1.525,198,0.728,201,1.053,207,1.205,247,0.817,253,0.728,254,1.643,259,0.728,260,1.347,265,0.728,295,0.728,298,0.844,299,1.734,301,1.643,308,0.844,316,2.069,317,0.998,318,0.998,319,0.998,320,3.245,321,0.998,322,2.72,323,0.998,324,2.299,325,0.998,326,0.998,327,1.652,328,3.073,329,2.113,330,2.113,331,1.652,332,1.652,333,0.998,334,0.998,335,0.998,336,0.998,337,1.652,338,0.998,339,0.998,340,0.998,341,1.985,342,1.542,343,0.998,344,0.998,345,0.998,346,0.998,347,0.998,348,0.998,349,0.998,350,0.998,351,0.998,352,1.652,353,1.396,354,2.623,355,0.998,356,0.998,357,0.998,358,2.299,359,1.396,360,0.998,361,0.998,362,2.113,363,2.076,364,0.998,365,0.998,366,3.007,367,0.998,368,0.998,369,0.998,370,0.998,371,0.998,372,0.998,373,0.998,374,3.073,375,0.998,376,0.998,377,0.998,378,0.998,379,0.998,380,0.998,381,0.998,382,0.998,383,1.652,384,2.456,385,2.113,386,0.998,387,0.998,388,0.998]],["title/testing/dependency-injection/#the-app-implementation",[149,1.386,316,1.386]],["text/testing/dependency-injection/#the-app-implementation",[2,1.046,9,1.046,12,1.361,23,1.214,24,0.923,39,0.37,50,1.505,52,0.485,65,1.577,71,1.046,86,1.328,96,1.361,103,0.923,124,1.711,147,1.361,149,2.004,154,1.959,171,1.361,198,1.361,201,1.189,207,1.959,253,1.361,259,1.361,260,2.004,265,1.361,295,1.361,298,1.577,299,1.189,301,1.763,316,2.004,317,1.865,318,1.865,319,1.865,320,4.002,321,1.865,322,3.644,323,1.865,324,2.658,325,1.865,326,1.865,327,2.684,328,3.383,329,3.144,330,3.144,331,2.684,332,2.684,333,1.865,334,1.865,335,1.865,336,1.865,337,2.684,338,1.865,339,1.865,340,1.865,341,1.361,342,1.361,343,1.865,344,1.865,345,1.865,346,1.865,347,1.865,348,1.865,349,1.865,350,1.865]],["title/testing/dependency-injection/#define-dependency",[247,1.076,299,1.386]],["text/testing/dependency-injection/#define-dependency",[21,1.658,23,0.877,28,1.964,32,0.993,33,1.964,39,0.364,52,0.801,71,1.273,74,1.96,76,1.658,78,1.658,86,1.189,101,1.448,172,2.248,175,1.273,201,1.448,254,2.101,301,1.727,308,1.92,316,2.228,328,3.168,341,2.551,342,1.658,351,2.272,352,3.081,353,1.92,354,3.168,355,2.272,356,2.272,357,2.272,358,2.604,359,1.92,360,2.272,361,2.272,362,3.495,363,1.92,364,2.272,365,2.272,366,2.955,367,2.272,368,2.272,369,2.272,370,2.272,371,2.272,372,2.272,373,2.272,374,1.92,375,2.272,376,2.272,377,2.272,378,2.272,379,2.272]],["title/testing/dependency-injection/#implementation-of-dependency-injector",[247,0.893,316,1.151,353,1.526]],["text/testing/dependency-injection/#implementation-of-dependency-injector",[32,1.345,33,2.153,35,1.006,39,0.373,41,1.663,44,0.693,52,0.799,67,3.266,69,2.205,71,1.463,74,1.893,76,2.464,78,2.244,175,1.893,254,1.463,299,1.96,301,1.006,324,2.205,341,1.309,342,1.309,354,2.599,358,2.599,359,1.516,363,2.599,366,3.347,374,3.512,380,1.794,381,1.794,382,1.794,383,2.609,384,3.377,385,3.075,386,1.794,387,1.794,388,1.794]]],"fields":["title","text"],"invertedIndex":[["",{"_index":39,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{},"sdk/copy-on-write/":{},"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperation":{},"sdk/threading/#blueprint-of-nsoperationqueue":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{},"sdk/threading/#mutex-and-the-data-consistency":{},"sdk/threading/#nsobject":{},"sdk/threading/#nsoperationqueue":{},"sdk/threading/#nsthread":{},"sdk/threading/#pthread-advancedjfyi":{},"sdk/view-modifiers/":{},"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#implementation-of-dependency-injector":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["0",{"_index":174,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["1",{"_index":113,"text":{"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperationqueue":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{},"sdk/threading/#nsoperationqueue":{}},"title":{}}],["1st",{"_index":351,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["20.7260966",{"_index":350,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["2nd",{"_index":364,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["4.0",{"_index":237,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["49.9683988",{"_index":348,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["5",{"_index":63,"text":{"sdk/copy-on-write/":{}},"title":{}}],["52a4716165a3",{"_index":64,"text":{"sdk/copy-on-write/":{}},"title":{}}],["_",{"_index":69,"text":{"sdk/copy-on-write/":{},"testing/dependency-injection/":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["abut",{"_index":180,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["access",{"_index":21,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{},"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["achiev",{"_index":29,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{}},"title":{}}],["ad",{"_index":307,"text":{"sdk/view-modifiers/":{}},"title":{}}],["add",{"_index":367,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["addoper",{"_index":268,"text":{"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperationqueue":{}},"title":{}}],["advanced/jfyi",{"_index":270,"text":{"sdk/threading/":{}},"title":{"sdk/threading/#pthread-advancedjfyi":{}}}],["affect",{"_index":276,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["alloc",{"_index":56,"text":{"sdk/copy-on-write/":{}},"title":{}}],["alreadi",{"_index":142,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["altern",{"_index":205,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["anoth",{"_index":164,"text":{"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperation":{},"sdk/threading/#blueprint-of-nsoperationqueue":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["answer",{"_index":234,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["anymor",{"_index":204,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["anyway",{"_index":122,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["api",{"_index":333,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["apicli",{"_index":38,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{}},"title":{}}],["apiclient.shar",{"_index":43,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{}},"title":{}}],["app",{"_index":149,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{},"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{"testing/dependency-injection/#the-app-implementation":{}}}],["append",{"_index":139,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["appli",{"_index":300,"text":{"sdk/view-modifiers/":{}},"title":{}}],["applic",{"_index":279,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["array",{"_index":132,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["articl",{"_index":179,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["associatedtyp",{"_index":382,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["async",{"_index":227,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["atom",{"_index":161,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["attribut",{"_index":218,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["avoid",{"_index":155,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["awar",{"_index":168,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["backend",{"_index":339,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["background",{"_index":231,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/view-modifiers/":{}},"title":{}}],["base",{"_index":187,"text":{"sdk/threading/":{},"sdk/threading/#nsobject":{}},"title":{}}],["behaviour",{"_index":30,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{}},"title":{}}],["below",{"_index":171,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{},"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["block",{"_index":114,"text":{"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperationqueue":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["blueprint",{"_index":256,"text":{"sdk/threading/":{}},"title":{"sdk/threading/#blueprint-of-nsoperation":{},"sdk/threading/#blueprint-of-nsoperationqueue":{}}}],["bodi",{"_index":304,"text":{"sdk/view-modifiers/":{}},"title":{}}],["both",{"_index":137,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["box",{"_index":72,"text":{"sdk/copy-on-write/":{}},"title":{}}],["build",{"_index":312,"text":{"sdk/view-modifiers/":{}},"title":{}}],["calcul",{"_index":105,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["call",{"_index":201,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["cancel",{"_index":245,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/threading/#nsoperationqueue":{}},"title":{}}],["capabl",{"_index":89,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["care",{"_index":198,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["case",{"_index":108,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["caus",{"_index":97,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["central",{"_index":193,"text":{"sdk/threading/":{}},"title":{"sdk/threading/#gcd-grand-central-dispatch":{}}}],["chapter",{"_index":361,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["check",{"_index":141,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["chunk",{"_index":262,"text":{"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperation":{}},"title":{}}],["class",{"_index":23,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{},"sdk/copy-on-write/":{},"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperation":{},"sdk/threading/#nsobject":{},"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["cllocat",{"_index":329,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["code",{"_index":230,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/threading/#nsthread":{}},"title":{}}],["color",{"_index":305,"text":{"sdk/view-modifiers/":{}},"title":{}}],["come",{"_index":186,"text":{"sdk/threading/":{},"sdk/threading/#nsobject":{}},"title":{}}],["complex",{"_index":242,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["comput",{"_index":84,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["concurr",{"_index":226,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["consist",{"_index":125,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{"sdk/threading/#mutex-and-the-data-consistency":{}}}],["constructor",{"_index":31,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{}},"title":{}}],["consum",{"_index":263,"text":{"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperation":{}},"title":{}}],["contain",{"_index":134,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["content",{"_index":8,"text":{"":{},"#home-page":{},"sdk/view-modifiers/":{}},"title":{}}],["context",{"_index":100,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["conveni",{"_index":309,"text":{"sdk/view-modifiers/":{}},"title":{}}],["copi",{"_index":53,"text":{"sdk/copy-on-write/":{}},"title":{"sdk/copy-on-write/":{}}}],["core",{"_index":94,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["cpu",{"_index":90,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["crash",{"_index":150,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["crate",{"_index":95,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["creat",{"_index":9,"text":{"":{},"#home-page":{},"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{},"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["curiou",{"_index":281,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["currenct",{"_index":357,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["current",{"_index":175,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/threading/#mutex-and-the-data-consistency":{},"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["currentvalu",{"_index":363,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["data",{"_index":124,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{},"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{"sdk/threading/#mutex-and-the-data-consistency":{}}}],["deadlock",{"_index":170,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["default",{"_index":225,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["defin",{"_index":299,"text":{"sdk/view-modifiers/":{},"testing/dependency-injection/":{},"testing/dependency-injection/#implementation-of-dependency-injector":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{"testing/dependency-injection/#define-dependency":{}}}],["definit",{"_index":386,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["depenc",{"_index":352,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["depend",{"_index":247,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/view-modifiers/":{},"testing/dependency-injection/":{}},"title":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}}}],["design",{"_index":16,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{}},"title":{}}],["develop",{"_index":278,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["difficult",{"_index":126,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["directli",{"_index":334,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["discuss",{"_index":7,"text":{"":{},"#home-page":{}},"title":{}}],["dispatch",{"_index":194,"text":{"sdk/threading/":{}},"title":{"sdk/threading/#gcd-grand-central-dispatch":{}}}],["dispatch_async",{"_index":214,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["dispatch_onc",{"_index":202,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["dispatch_sync",{"_index":209,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["dispatchqueu",{"_index":221,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["dispatchsemaphor",{"_index":173,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["duplic",{"_index":146,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["easiest",{"_index":182,"text":{"sdk/threading/":{},"sdk/threading/#nsobject":{}},"title":{}}],["entir",{"_index":87,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["error",{"_index":4,"text":{"":{},"#home-page":{}},"title":{}}],["even",{"_index":147,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{},"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["everyth",{"_index":282,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["exact",{"_index":370,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["exactli",{"_index":140,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["exampl",{"_index":37,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{},"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["execut",{"_index":213,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["exist",{"_index":143,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["extend",{"_index":365,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["extens",{"_index":308,"text":{"sdk/view-modifiers/":{},"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["extract",{"_index":377,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["factor",{"_index":115,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["final",{"_index":65,"text":{"sdk/copy-on-write/":{},"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["first",{"_index":298,"text":{"sdk/view-modifiers/":{},"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["float64",{"_index":331,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["foo",{"_index":206,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["formula",{"_index":110,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["found",{"_index":5,"text":{"":{},"#home-page":{}},"title":{}}],["func",{"_index":260,"text":{"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperation":{},"sdk/view-modifiers/":{},"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["gcd",{"_index":191,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{"sdk/threading/#gcd-grand-central-dispatch":{}}}],["getter",{"_index":375,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["github",{"_index":13,"text":{"":{},"#home-page":{}},"title":{}}],["give",{"_index":18,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{}},"title":{}}],["given",{"_index":321,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["global",{"_index":20,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{},"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["go",{"_index":283,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["good",{"_index":271,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["grand",{"_index":192,"text":{"sdk/threading/":{}},"title":{"sdk/threading/#gcd-grand-central-dispatch":{}}}],["handl",{"_index":273,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["here",{"_index":44,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{},"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{},"sdk/threading/#pthread-advancedjfyi":{},"sdk/view-modifiers/":{},"testing/dependency-injection/":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["highli",{"_index":277,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["hold",{"_index":380,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["home",{"_index":0,"text":{"":{}},"title":{"":{},"#home-page":{}}}],["https://betterprogramming.pub/understand",{"_index":61,"text":{"sdk/copy-on-write/":{}},"title":{}}],["https://developer.apple.com/reference/foundation/thread",{"_index":252,"text":{"sdk/threading/":{},"sdk/threading/#nsthread":{}},"title":{}}],["i/o",{"_index":107,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["idea",{"_index":272,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["imagin",{"_index":127,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["impact",{"_index":117,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["implement",{"_index":316,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{"testing/dependency-injection/#implementation-of-dependency-injector":{},"testing/dependency-injection/#the-app-implementation":{}}}],["important.job",{"_index":223,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["inbackground",{"_index":189,"text":{"sdk/threading/":{},"sdk/threading/#nsobject":{}},"title":{}}],["init",{"_index":41,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{},"sdk/copy-on-write/":{},"testing/dependency-injection/":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["initialis",{"_index":47,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{}},"title":{}}],["inject",{"_index":301,"text":{"sdk/view-modifiers/":{},"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#implementation-of-dependency-injector":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{"testing/dependency-injection/":{}}}],["injected(\\.temperatureprovid",{"_index":371,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["injectedvalu",{"_index":366,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["injectedvalues[\\.temperatureprovid",{"_index":378,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["injectionkey",{"_index":354,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["injector",{"_index":353,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{"testing/dependency-injection/#implementation-of-dependency-injector":{}}}],["instac",{"_index":27,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{}},"title":{}}],["instanc",{"_index":22,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{}},"title":{}}],["instead",{"_index":326,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["intens",{"_index":85,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["interfac",{"_index":317,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["invok",{"_index":310,"text":{"sdk/view-modifiers/":{}},"title":{}}],["io",{"_index":236,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["iscancel",{"_index":261,"text":{"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperation":{}},"title":{}}],["isknownuniquelyreferenc",{"_index":77,"text":{"sdk/copy-on-write/":{}},"title":{}}],["item",{"_index":136,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["iter",{"_index":144,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["itself",{"_index":116,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["job",{"_index":81,"text":{"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperationqueue":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{},"sdk/threading/#mutex-and-the-data-consistency":{},"sdk/threading/#nsobject":{},"sdk/threading/#nsthread":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}}}],["k",{"_index":384,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["keep",{"_index":215,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["key",{"_index":358,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["keypath",{"_index":374,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["keywoard",{"_index":51,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{}},"title":{}}],["kind",{"_index":80,"text":{"sdk/threading/":{}},"title":{"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}}}],["know",{"_index":344,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["label",{"_index":222,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["later",{"_index":238,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["latitud",{"_index":347,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["lazi",{"_index":46,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{},"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["let'",{"_index":35,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{},"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{},"testing/dependency-injection/":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["level",{"_index":275,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["libdispatch",{"_index":195,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["librari",{"_index":197,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["lightbackground",{"_index":311,"text":{"sdk/view-modifiers/":{}},"title":{}}],["lightbackgroundcolormodifi",{"_index":302,"text":{"sdk/view-modifiers/":{}},"title":{}}],["lightcolor",{"_index":306,"text":{"sdk/view-modifiers/":{}},"title":{}}],["link",{"_index":369,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["loaddata",{"_index":346,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["locat",{"_index":322,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["lock",{"_index":210,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["loggerprovid",{"_index":338,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["longitud",{"_index":349,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["look",{"_index":36,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{},"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["low",{"_index":274,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["main",{"_index":229,"text":{"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperation":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["make",{"_index":24,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{},"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{},"sdk/threading/#mutex-and-the-data-consistency":{},"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["manag",{"_index":200,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["mani",{"_index":111,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["maxconcurrentoperationcount",{"_index":266,"text":{"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperationqueue":{}},"title":{}}],["maximum",{"_index":92,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["mechan",{"_index":165,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["mechanizm",{"_index":55,"text":{"sdk/copy-on-write/":{}},"title":{}}],["memori",{"_index":57,"text":{"sdk/copy-on-write/":{}},"title":{}}],["method",{"_index":185,"text":{"sdk/threading/":{},"sdk/threading/#nsobject":{},"sdk/view-modifiers/":{}},"title":{}}],["mock",{"_index":336,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["mockedtemperatureprovid",{"_index":379,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["modifi",{"_index":60,"text":{"sdk/copy-on-write/":{},"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{},"sdk/view-modifiers/":{}},"title":{"sdk/view-modifiers/":{}}}],["more",{"_index":96,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{},"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["much",{"_index":118,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["mutat",{"_index":151,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["mutex",{"_index":123,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{"sdk/threading/#mutex-and-the-data-consistency":{}}}],["myoper",{"_index":267,"text":{"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperationqueue":{}},"title":{}}],["myveryexpensiveoper",{"_index":258,"text":{"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperation":{},"sdk/threading/#blueprint-of-nsoperationqueue":{}},"title":{}}],["name",{"_index":265,"text":{"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperationqueue":{},"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["need",{"_index":50,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{},"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{},"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["new",{"_index":184,"text":{"sdk/threading/":{},"sdk/threading/#nsobject":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["newvalu",{"_index":78,"text":{"sdk/copy-on-write/":{},"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["next",{"_index":360,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["nice",{"_index":248,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["nil",{"_index":159,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{},"sdk/threading/#nsobject":{},"sdk/threading/#nsthread":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["note",{"_index":48,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{}},"title":{}}],["now",{"_index":42,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{},"sdk/view-modifiers/":{}},"title":{}}],["nsobject",{"_index":181,"text":{"sdk/threading/":{},"sdk/threading/#nsobject":{}},"title":{"sdk/threading/#nsobject":{}}}],["nsoper",{"_index":257,"text":{"sdk/threading/":{}},"title":{"sdk/threading/#blueprint-of-nsoperation":{}}}],["nsoperationqueu",{"_index":235,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/threading/#nsoperationqueue":{}},"title":{"sdk/threading/#blueprint-of-nsoperationqueue":{},"sdk/threading/#nsoperationqueue":{}}}],["nsthread",{"_index":251,"text":{"sdk/threading/":{}},"title":{"sdk/threading/#nsthread":{}}}],["number",{"_index":93,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["object",{"_index":58,"text":{"sdk/copy-on-write/":{},"sdk/threading/":{},"sdk/threading/#nsthread":{}},"title":{}}],["on",{"_index":26,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{},"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["onc",{"_index":208,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["oper",{"_index":259,"text":{"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperation":{},"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["operationqueu",{"_index":264,"text":{"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperationqueue":{}},"title":{}}],["optim",{"_index":112,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["optimum",{"_index":243,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["order",{"_index":154,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{},"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["overrid",{"_index":156,"text":{"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperation":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["page",{"_index":1,"text":{"":{}},"title":{"#home-page":{}}}],["part",{"_index":196,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["particular",{"_index":199,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["pass",{"_index":212,"text":{"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperationqueue":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["path",{"_index":373,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["pattern",{"_index":17,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{}},"title":{}}],["perform",{"_index":82,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}}}],["performselector",{"_index":188,"text":{"sdk/threading/":{},"sdk/threading/#nsobject":{}},"title":{}}],["pey",{"_index":372,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["pictur",{"_index":250,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["point",{"_index":327,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["pointer",{"_index":130,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["possibl",{"_index":335,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["potenti",{"_index":169,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["prefer",{"_index":240,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["print",{"_index":295,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{},"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["privat",{"_index":32,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{},"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/view-modifiers/":{},"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["probabl",{"_index":119,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["process",{"_index":88,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["propeperti",{"_index":376,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["properti",{"_index":341,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#implementation-of-dependency-injector":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["propertywrapp",{"_index":387,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["propetri",{"_index":368,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["protocol",{"_index":324,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#implementation-of-dependency-injector":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["prototyp",{"_index":14,"text":{},"title":{"design-patterns/creational-patterns/prototype/":{}}}],["provid",{"_index":319,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["pthread",{"_index":269,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{"sdk/threading/#pthread-advancedjfyi":{}}}],["pthread_attr_init",{"_index":290,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["pthread_attr_set_qos_class_np",{"_index":291,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["pthread_attr_t",{"_index":288,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["pthread_creat",{"_index":293,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["pthread_mutex_destroy",{"_index":163,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["pthread_mutex_init",{"_index":158,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["pthread_mutex_lock",{"_index":160,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["pthread_mutex_t",{"_index":157,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["pthread_mutex_unlock",{"_index":162,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["pthread_t",{"_index":286,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["public",{"_index":381,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["pull",{"_index":11,"text":{"":{},"#home-page":{}},"title":{}}],["qo",{"_index":224,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["qos_class_user_interact",{"_index":292,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["queue",{"_index":220,"text":{"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperationqueue":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["quot",{"_index":239,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["raywenderlich",{"_index":232,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["read",{"_index":138,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["real",{"_index":332,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["reason",{"_index":91,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["ref",{"_index":66,"text":{"sdk/copy-on-write/":{}},"title":{}}],["regist",{"_index":355,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["report",{"_index":3,"text":{"":{},"#home-page":{}},"title":{}}],["reposiotri",{"_index":318,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["repositori",{"_index":337,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["request",{"_index":12,"text":{"":{},"#home-page":{},"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["requir",{"_index":244,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["result",{"_index":330,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["return",{"_index":75,"text":{"sdk/copy-on-write/":{},"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperation":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["return_valu",{"_index":289,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["run",{"_index":216,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["same",{"_index":131,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["sdk",{"_index":203,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["see",{"_index":172,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{},"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["selector",{"_index":190,"text":{"sdk/threading/":{},"sdk/threading/#nsobject":{},"sdk/threading/#nsthread":{}},"title":{}}],["self",{"_index":254,"text":{"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperation":{},"sdk/threading/#nsthread":{},"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["semaphor",{"_index":167,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["send",{"_index":177,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["separ",{"_index":83,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}}}],["serial",{"_index":219,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["set",{"_index":76,"text":{"sdk/copy-on-write/":{},"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["share",{"_index":40,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{}},"title":{}}],["show",{"_index":284,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["signal",{"_index":121,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["simpli",{"_index":313,"text":{"sdk/view-modifiers/":{}},"title":{}}],["singleton",{"_index":15,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{}},"title":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{}}}],["situat",{"_index":128,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["slower",{"_index":106,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["solut",{"_index":153,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["start",{"_index":183,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/threading/#nsobject":{},"sdk/threading/#nsthread":{}},"title":{}}],["static",{"_index":33,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{},"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["step",{"_index":28,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{},"sdk/view-modifiers/":{},"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["stop",{"_index":176,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["store",{"_index":356,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["struct",{"_index":71,"text":{"sdk/copy-on-write/":{},"sdk/view-modifiers/":{},"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#implementation-of-dependency-injector":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["stuff",{"_index":228,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["subscript",{"_index":383,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["suppos",{"_index":133,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["sure",{"_index":25,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{}},"title":{}}],["suspend",{"_index":246,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["swift",{"_index":62,"text":{"sdk/copy-on-write/":{}},"title":{}}],["switch",{"_index":99,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["sync",{"_index":166,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["t",{"_index":67,"text":{"sdk/copy-on-write/":{},"testing/dependency-injection/":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["take",{"_index":101,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{},"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["target",{"_index":253,"text":{"sdk/threading/":{},"sdk/threading/#nsthread":{},"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["task",{"_index":241,"text":{"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperation":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["temperatur",{"_index":320,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["temperatureprovid",{"_index":328,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["temperatureproviderkey",{"_index":362,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{}},"title":{}}],["temperatureviewmodel",{"_index":345,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["testabl",{"_index":323,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["text",{"_index":314,"text":{"sdk/view-modifiers/":{}},"title":{}}],["theme",{"_index":296,"text":{"sdk/view-modifiers/":{}},"title":{"sdk/view-modifiers/":{}}}],["therefor",{"_index":104,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["thread",{"_index":79,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{},"sdk/threading/#mutex-and-the-data-consistency":{},"sdk/threading/#nsobject":{},"sdk/threading/#nsthread":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}}}],["threat",{"_index":152,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["through",{"_index":145,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["ticket",{"_index":10,"text":{"":{},"#home-page":{}},"title":{}}],["tile",{"_index":315,"text":{"sdk/view-modifiers/":{}},"title":{}}],["time",{"_index":103,"text":{"sdk/threading/":{},"sdk/threading/#blueprint-of-nsoperation":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{},"sdk/threading/#mutex-and-the-data-consistency":{},"sdk/threading/#pthread-advancedjfyi":{},"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["todo",{"_index":249,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["tread",{"_index":255,"text":{"sdk/threading/":{},"sdk/threading/#nsthread":{}},"title":{}}],["tri",{"_index":178,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["trigger",{"_index":109,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["two",{"_index":129,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["type",{"_index":359,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["uniqu",{"_index":135,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["unit",{"_index":102,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["unnecessari",{"_index":98,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{}},"title":{}}],["unsafemutablerawpoint",{"_index":294,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["until",{"_index":211,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["us",{"_index":86,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{},"sdk/threading/#mutex-and-the-data-consistency":{},"sdk/threading/#nsobject":{},"sdk/view-modifiers/":{},"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["user",{"_index":343,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["user_interactive_qos_attr",{"_index":287,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["user_interactive_thread",{"_index":285,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["v",{"_index":70,"text":{"sdk/copy-on-write/":{}},"title":{}}],["val",{"_index":68,"text":{"sdk/copy-on-write/":{}},"title":{}}],["valu",{"_index":74,"text":{"sdk/copy-on-write/":{},"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{},"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["var",{"_index":52,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{},"sdk/copy-on-write/":{},"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"sdk/threading/#mutex-and-the-data-consistency":{},"sdk/threading/#pthread-advancedjfyi":{},"sdk/view-modifiers/":{},"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#implementation-of-dependency-injector":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["varibl",{"_index":34,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{}},"title":{}}],["veribl",{"_index":49,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{}},"title":{}}],["version",{"_index":45,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{}},"title":{}}],["view",{"_index":297,"text":{"sdk/view-modifiers/":{}},"title":{"sdk/view-modifiers/":{}}}],["viewmodifi",{"_index":303,"text":{"sdk/view-modifiers/":{}},"title":{}}],["void",{"_index":207,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{},"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["vs",{"_index":233,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["wait",{"_index":120,"text":{"sdk/threading/":{},"sdk/threading/#kind-of-jobs-might-be-perform-in-the-separate-threads":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["want",{"_index":2,"text":{"":{},"#home-page":{},"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{},"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["way",{"_index":19,"text":{"design-patterns/creational-patterns/singleton/":{},"design-patterns/creational-patterns/singleton/#singleton":{},"sdk/threading/":{},"sdk/threading/#nsobject":{}},"title":{}}],["websit",{"_index":6,"text":{"":{},"#home-page":{}},"title":{}}],["whatev",{"_index":340,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["whoever",{"_index":280,"text":{"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}],["whole",{"_index":325,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["without",{"_index":217,"text":{"sdk/threading/":{},"sdk/threading/#gcd-grand-central-dispatch":{}},"title":{}}],["wnen",{"_index":59,"text":{"sdk/copy-on-write/":{}},"title":{}}],["work",{"_index":148,"text":{"sdk/threading/":{},"sdk/threading/#mutex-and-the-data-consistency":{}},"title":{}}],["wrappedvalu",{"_index":388,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["wrapper",{"_index":342,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#define-dependency":{},"testing/dependency-injection/#implementation-of-dependency-injector":{},"testing/dependency-injection/#the-app-implementation":{}},"title":{}}],["writablekeypath",{"_index":385,"text":{"testing/dependency-injection/":{},"testing/dependency-injection/#implementation-of-dependency-injector":{}},"title":{}}],["write",{"_index":54,"text":{"sdk/copy-on-write/":{}},"title":{"sdk/copy-on-write/":{}}}],["x",{"_index":73,"text":{"sdk/copy-on-write/":{},"sdk/threading/":{},"sdk/threading/#pthread-advancedjfyi":{}},"title":{}}]],"pipeline":["stemmer"],"version":"2.3.9"}}